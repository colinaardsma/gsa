# Generated by Django 2.0.2 on 2018-02-06 04:03

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_name', models.CharField(max_length=200)),
                ('league_key', models.CharField(max_length=200)),
                ('team_count', models.IntegerField()),
                ('max_ip', models.IntegerField()),
                ('season', models.IntegerField()),
                ('batting_pos', models.CharField(max_length=200)),
                ('pitcher_pos', models.CharField(max_length=200)),
                ('bench_pos', models.CharField(max_length=200)),
                ('dl_pos', models.CharField(max_length=200)),
                ('na_pos', models.CharField(max_length=200)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('total_money_spent', models.IntegerField()),
                ('money_spent_on_batters', models.IntegerField()),
                ('money_spent_on_pitchers', models.IntegerField()),
                ('batter_budget_pct', models.FloatField()),
                ('pitcher_budget_pct', models.FloatField()),
                ('batters_over_zero_dollars', models.IntegerField()),
                ('pitchers_over_zero_dollars', models.IntegerField()),
                ('one_dollar_batters', models.IntegerField()),
                ('one_dollar_pitchers', models.IntegerField()),
                ('b_dollar_per_fvaaz', models.FloatField()),
                ('p_dollar_per_fvaaz', models.FloatField()),
                ('b_player_pool_mult', models.FloatField()),
                ('p_player_pool_mult', models.FloatField()),
                ('r_sgp', models.FloatField()),
                ('hr_sgp', models.FloatField()),
                ('rbi_sgp', models.FloatField()),
                ('sb_sgp', models.FloatField()),
                ('ops_sgp', models.FloatField()),
                ('avg_sgp', models.FloatField()),
                ('w_sgp', models.FloatField()),
                ('sv_sgp', models.FloatField()),
                ('k_sgp', models.FloatField()),
                ('era_sgp', models.FloatField()),
                ('whip_sgp', models.FloatField()),
                ('prev_year_key', models.CharField(max_length=200)),
                ('total_money_spent_avg', models.IntegerField()),
                ('money_spent_on_batters_avg', models.IntegerField()),
                ('money_spent_on_pitchers_avg', models.IntegerField()),
                ('batter_budget_pct_avg', models.FloatField()),
                ('pitcher_budget_pct_avg', models.FloatField()),
                ('batters_over_zero_dollars_avg', models.IntegerField()),
                ('pitchers_over_zero_dollars_avg', models.IntegerField()),
                ('one_dollar_batters_avg', models.IntegerField()),
                ('one_dollar_pitchers_avg', models.IntegerField()),
                ('b_dollar_per_fvaaz_avg', models.FloatField()),
                ('p_dollar_per_fvaaz_avg', models.FloatField()),
                ('b_player_pool_mult_avg', models.FloatField()),
                ('p_player_pool_mult_avg', models.FloatField()),
                ('r_sgp_avg', models.FloatField()),
                ('hr_sgp_avg', models.FloatField()),
                ('rbi_sgp_avg', models.FloatField()),
                ('sb_sgp_avg', models.FloatField()),
                ('ops_sgp_avg', models.FloatField()),
                ('avg_sgp_avg', models.FloatField()),
                ('w_sgp_avg', models.FloatField()),
                ('sv_sgp_avg', models.FloatField()),
                ('k_sgp_avg', models.FloatField()),
                ('era_sgp_avg', models.FloatField()),
                ('whip_sgp_avg', models.FloatField()),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
